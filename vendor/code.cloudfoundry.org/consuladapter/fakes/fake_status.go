// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"code.cloudfoundry.org/consuladapter"
)

type FakeStatus struct {
	LeaderStub        func() (string, error)
	leaderMutex       sync.RWMutex
	leaderArgsForCall []struct{}
	leaderReturns     struct {
		result1 string
		result2 error
	}
	PeersStub        func() ([]string, error)
	peersMutex       sync.RWMutex
	peersArgsForCall []struct{}
	peersReturns     struct {
		result1 []string
		result2 error
	}
}

func (fake *FakeStatus) Leader() (string, error) {
	fake.leaderMutex.Lock()
	fake.leaderArgsForCall = append(fake.leaderArgsForCall, struct{}{})
	fake.leaderMutex.Unlock()
	if fake.LeaderStub != nil {
		return fake.LeaderStub()
	} else {
		return fake.leaderReturns.result1, fake.leaderReturns.result2
	}
}

func (fake *FakeStatus) LeaderCallCount() int {
	fake.leaderMutex.RLock()
	defer fake.leaderMutex.RUnlock()
	return len(fake.leaderArgsForCall)
}

func (fake *FakeStatus) LeaderReturns(result1 string, result2 error) {
	fake.LeaderStub = nil
	fake.leaderReturns = struct {
		result1 string
		result2 error
	}{result1, result2}
}

func (fake *FakeStatus) Peers() ([]string, error) {
	fake.peersMutex.Lock()
	fake.peersArgsForCall = append(fake.peersArgsForCall, struct{}{})
	fake.peersMutex.Unlock()
	if fake.PeersStub != nil {
		return fake.PeersStub()
	} else {
		return fake.peersReturns.result1, fake.peersReturns.result2
	}
}

func (fake *FakeStatus) PeersCallCount() int {
	fake.peersMutex.RLock()
	defer fake.peersMutex.RUnlock()
	return len(fake.peersArgsForCall)
}

func (fake *FakeStatus) PeersReturns(result1 []string, result2 error) {
	fake.PeersStub = nil
	fake.peersReturns = struct {
		result1 []string
		result2 error
	}{result1, result2}
}

var _ consuladapter.Status = new(FakeStatus)
